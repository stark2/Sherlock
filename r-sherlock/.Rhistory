s <- s[order(s$D),]
str(data)
plot(x = data$D, y = data$SUM, col=data$A1)
# ---------------------------------------------------------------------------------
df <- data[1:10,]
ggplot(df, aes(x = df$D, y = df$SUM)) +
geom_line(aes(y = df$SUM, col = "SUM"), pch = 19, size = 1, col = "steelblue", linetype = "dashed") +
geom_line(aes(y = df$SD, col = "SD"), pch = 19, size = 1, col = "dark green", linetype = "solid") +
geom_point(aes(y = df$SSM, col = "SSM"), pch = 19, size = 4, alpha = 0.75, col = "red", linetype = "dashed") +
geom_point(pch = 19, size = 4, alpha = 0.75, col = "steelblue")
ggplot(data=df, aes(x=D, y=SUM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
ggplot(data=df, aes(x=D, y=SSM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
# ---------------------------------------------------------------------------------
#boxplot(data$SUM ~ data$A1, col = "red")
abline(h= 130)
#hist(data$SUM, col = "red", breaks = 50)
model <- lm(data$SUM ~ data$A1, data)
abline(model, lwd = 2)
abline(v = median(data$SUM), col = "blue", lwd = 4)
rug(data$SUM)
boxplot(data$A1, col = "green")
abline(h= 4)
hist(data$A1, col = "green")
rug(data$A1)
ggplot(data=data, aes(x=D, y=data$SUM, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$SUM), size=5)
ggplot(data=data, aes(x=D, y=data$A1, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$A1), size=5)
quantile(data$SUM)
tt <- table(data$SUM)
tk <- table(tt)
tt
tk
class(tt)
str(tt)
dim(tt)
range(tt)
hcl <- hclust(dist(tt))  # clustering
plot(hcl)
median(tt)
quantile(tt, probs = c(0.2, 0.75, 1))
quantile(data$SSM)
st <- table(data$SSM)
sk <- table(st)
st
sk
hcs <- hclust(dist(st))  # clustering
plot(hcs)
# ------------------------------------------------------------------------------
ls()
rm(list=ls())
#library(tseries)
library(ggplot2)
library(reshape2)
data <- read.csv("~/Data/lua-workspace/luckynumbers/swlt_2015.csv",
colClasses=c("character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"),
sep=" ", comment.char = "#", header = FALSE)
#View(data)
head(data)
#numbers <- data[,c(2,3,4,5,6,7)]
#NN	YYYY-MM-DD	N1	N2	N3	N4	N5	N6	A1	AVG	SUM	PRIME	CHNUM	EVEN	ODD	BGAVG	BG25	PATTERN	DF	B1	B2
data$AVG <- rowMeans(data[,2:7])
data$SUM <- rowSums(data[,2:7])
data$SSM <- apply(data[,2:7], 1, function(x) { x[6] - x[5] +  x[5] - x[4] + x[4] - x[3] + x[3] - x[2] + x[2] - x[1]} )
data$SD <- apply(data[,2:7], 1, sd )
colnames(data) <- c("D", "N1", "N2", "N3", "N4", "N5", "N6", "A1", "AVG", "SUM", "SSM", "SD")
head(data)
data$D <- as.Date(data$D, format="%Y-%m-%d")
s <- data[c("D", "A1", "SUM")]
s <- s[order(s$D),]
str(data)
plot(x = data$D, y = data$SUM, col=data$A1)
# ---------------------------------------------------------------------------------
df <- data[1:10,]
ggplot(df, aes(x = df$D, y = df$SUM)) +
geom_line(aes(y = df$SUM, col = "SUM"), pch = 19, size = 1, col = "steelblue", linetype = "dashed") +
geom_line(aes(y = df$SD, col = "SD"), pch = 19, size = 1, col = "dark green", linetype = "solid") +
geom_point(aes(y = df$SSM, col = "SSM"), pch = 19, size = 4, alpha = 0.75, col = "red", linetype = "dashed") +
geom_point(pch = 19, size = 4, alpha = 0.75, col = "steelblue")
ggplot(data=df, aes(x=D, y=SUM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
ggplot(data=df, aes(x=D, y=SSM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
# ---------------------------------------------------------------------------------
#boxplot(data$SUM ~ data$A1, col = "red")
abline(h= 130)
#hist(data$SUM, col = "red", breaks = 50)
model <- lm(data$SUM ~ data$A1, data)
abline(model, lwd = 2)
abline(v = median(data$SUM), col = "blue", lwd = 4)
rug(data$SUM)
boxplot(data$A1, col = "green")
abline(h= 4)
hist(data$A1, col = "green")
rug(data$A1)
ggplot(data=data, aes(x=D, y=data$SUM, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$SUM), size=5)
ggplot(data=data, aes(x=D, y=data$A1, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$A1), size=5)
quantile(data$SUM)
tt <- table(data$SUM)
tk <- table(tt)
tt
tk
class(tt)
str(tt)
dim(tt)
range(tt)
hcl <- hclust(dist(tt))  # clustering
plot(hcl)
median(tt)
quantile(tt, probs = c(0.2, 0.75, 1))
quantile(data$SSM)
st <- table(data$SSM)
sk <- table(st)
st
sk
hcs <- hclust(dist(st))  # clustering
plot(hcs)
ls()
rm(list=ls())
#library(tseries)
library(ggplot2)
library(reshape2)
data <- read.csv("~/Data/lua-workspace/luckynumbers/swlt_2015.csv",
colClasses=c("character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"),
sep=" ", comment.char = "#", header = FALSE)
#View(data)
head(data)
#numbers <- data[,c(2,3,4,5,6,7)]
#NN	YYYY-MM-DD	N1	N2	N3	N4	N5	N6	A1	AVG	SUM	PRIME	CHNUM	EVEN	ODD	BGAVG	BG25	PATTERN	DF	B1	B2
data$AVG <- rowMeans(data[,2:7])
data$SUM <- rowSums(data[,2:7])
data$SSM <- apply(data[,2:7], 1, function(x) { x[6] - x[5] +  x[5] - x[4] + x[4] - x[3] + x[3] - x[2] + x[2] - x[1]} )
data$SD <- apply(data[,2:7], 1, sd )
colnames(data) <- c("D", "N1", "N2", "N3", "N4", "N5", "N6", "A1", "AVG", "SUM", "SSM", "SD")
head(data)
data$D <- as.Date(data$D, format="%Y-%m-%d")
s <- data[c("D", "A1", "SUM")]
s <- s[order(s$D),]
str(data)
plot(x = data$D, y = data$SUM, col=data$A1)
# ---------------------------------------------------------------------------------
df <- data[1:10,]
ggplot(df, aes(x = df$D, y = df$SUM)) +
geom_line(aes(y = df$SUM, col = "SUM"), pch = 19, size = 1, col = "steelblue", linetype = "dashed") +
geom_line(aes(y = df$SD, col = "SD"), pch = 19, size = 1, col = "dark green", linetype = "solid") +
geom_point(aes(y = df$SSM, col = "SSM"), pch = 19, size = 4, alpha = 0.75, col = "red", linetype = "dashed") +
geom_point(pch = 19, size = 4, alpha = 0.75, col = "steelblue")
ggplot(data=df, aes(x=D, y=SUM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
ggplot(data=df, aes(x=D, y=SSM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
# ---------------------------------------------------------------------------------
#boxplot(data$SUM ~ data$A1, col = "red")
abline(h= 130)
#hist(data$SUM, col = "red", breaks = 50)
model <- lm(data$SUM ~ data$A1, data)
abline(model, lwd = 2)
abline(v = median(data$SUM), col = "blue", lwd = 4)
rug(data$SUM)
boxplot(data$A1, col = "green")
abline(h= 4)
hist(data$A1, col = "green")
rug(data$A1)
ggplot(data=data, aes(x=D, y=data$SUM, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$SUM), size=5)
ggplot(data=data, aes(x=D, y=data$A1, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$A1), size=5)
quantile(data$SUM)
tt <- table(data$SUM)
tk <- table(tt)
tt
tk
class(tt)
str(tt)
dim(tt)
range(tt)
hcl <- hclust(dist(tt))  # clustering
plot(hcl)
median(tt)
quantile(tt, probs = c(0.2, 0.75, 1))
quantile(data$SSM)
st <- table(data$SSM)
sk <- table(st)
st
sk
hcs <- hclust(dist(st))  # clustering
plot(hcs)
ls()
rm(list=ls())
#library(tseries)
library(ggplot2)
library(reshape2)
data <- read.csv("~/Data/lua-workspace/luckynumbers/swlt_2015.csv",
colClasses=c("character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"),
sep=" ", comment.char = "#", header = FALSE)
#View(data)
head(data)
#numbers <- data[,c(2,3,4,5,6,7)]
#NN	YYYY-MM-DD	N1	N2	N3	N4	N5	N6	A1	AVG	SUM	PRIME	CHNUM	EVEN	ODD	BGAVG	BG25	PATTERN	DF	B1	B2
data$AVG <- rowMeans(data[,2:7])
data$SUM <- rowSums(data[,2:7])
data$SSM <- apply(data[,2:7], 1, function(x) { x[6] - x[5] +  x[5] - x[4] + x[4] - x[3] + x[3] - x[2] + x[2] - x[1]} )
data$SD <- apply(data[,2:7], 1, sd )
colnames(data) <- c("D", "N1", "N2", "N3", "N4", "N5", "N6", "A1", "AVG", "SUM", "SSM", "SD")
head(data)
data$D <- as.Date(data$D, format="%Y-%m-%d")
s <- data[c("D", "A1", "SUM")]
s <- s[order(s$D),]
str(data)
plot(x = data$D, y = data$SUM, col=data$A1)
# ---------------------------------------------------------------------------------
df <- data[1:10,]
ggplot(df, aes(x = df$D, y = df$SUM)) +
geom_line(aes(y = df$SUM, col = "SUM"), pch = 19, size = 1, col = "steelblue", linetype = "dashed") +
geom_line(aes(y = df$SD, col = "SD"), pch = 19, size = 1, col = "dark green", linetype = "solid") +
geom_point(aes(y = df$SSM, col = "SSM"), pch = 19, size = 4, alpha = 0.75, col = "red", linetype = "dashed") +
geom_point(pch = 19, size = 4, alpha = 0.75, col = "steelblue")
ggplot(data=df, aes(x=D, y=SUM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
ggplot(data=df, aes(x=D, y=SSM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
# ---------------------------------------------------------------------------------
#boxplot(data$SUM ~ data$A1, col = "red")
abline(h= 130)
#hist(data$SUM, col = "red", breaks = 50)
model <- lm(data$SUM ~ data$A1, data)
abline(model, lwd = 2)
abline(v = median(data$SUM), col = "blue", lwd = 4)
rug(data$SUM)
boxplot(data$A1, col = "green")
abline(h= 4)
hist(data$A1, col = "green")
rug(data$A1)
ggplot(data=data, aes(x=D, y=data$SUM, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$SUM), size=5)
ggplot(data=data, aes(x=D, y=data$A1, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$A1), size=5)
quantile(data$SUM)
tt <- table(data$SUM)
tk <- table(tt)
tt
tk
class(tt)
str(tt)
dim(tt)
range(tt)
hcl <- hclust(dist(tt))  # clustering
plot(hcl)
median(tt)
quantile(tt, probs = c(0.2, 0.75, 1))
quantile(data$SSM)
st <- table(data$SSM)
sk <- table(st)
st
sk
hcs <- hclust(dist(st))  # clustering
plot(hcs)
# ------------------------------------------------------------------------------
ls()
rm(list=ls())
#library(tseries)
library(ggplot2)
library(reshape2)
data <- read.csv("~/Data/lua-workspace/luckynumbers/swlt_2015.csv",
colClasses=c("character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"),
sep=" ", comment.char = "#", header = FALSE)
#View(data)
head(data)
#numbers <- data[,c(2,3,4,5,6,7)]
#NN	YYYY-MM-DD	N1	N2	N3	N4	N5	N6	A1	AVG	SUM	PRIME	CHNUM	EVEN	ODD	BGAVG	BG25	PATTERN	DF	B1	B2
data$AVG <- rowMeans(data[,2:7])
data$SUM <- rowSums(data[,2:7])
data$SSM <- apply(data[,2:7], 1, function(x) { x[6] - x[5] +  x[5] - x[4] + x[4] - x[3] + x[3] - x[2] + x[2] - x[1]} )
data$SD <- apply(data[,2:7], 1, sd )
colnames(data) <- c("D", "N1", "N2", "N3", "N4", "N5", "N6", "A1", "AVG", "SUM", "SSM", "SD")
head(data)
data$D <- as.Date(data$D, format="%Y-%m-%d")
s <- data[c("D", "A1", "SUM")]
s <- s[order(s$D),]
str(data)
plot(x = data$D, y = data$SUM, col=data$A1)
# ---------------------------------------------------------------------------------
df <- data[1:10,]
ggplot(df, aes(x = df$D, y = df$SUM)) +
geom_line(aes(y = df$SUM, col = "SUM"), pch = 19, size = 1, col = "steelblue", linetype = "dashed") +
geom_line(aes(y = df$SD, col = "SD"), pch = 19, size = 1, col = "dark green", linetype = "solid") +
geom_point(aes(y = df$SSM, col = "SSM"), pch = 19, size = 4, alpha = 0.75, col = "red", linetype = "dashed") +
geom_point(pch = 19, size = 4, alpha = 0.75, col = "steelblue")
ggplot(data=df, aes(x=D, y=SUM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
ggplot(data=df, aes(x=D, y=SSM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
# ---------------------------------------------------------------------------------
#boxplot(data$SUM ~ data$A1, col = "red")
abline(h= 130)
#hist(data$SUM, col = "red", breaks = 50)
model <- lm(data$SUM ~ data$A1, data)
abline(model, lwd = 2)
abline(v = median(data$SUM), col = "blue", lwd = 4)
rug(data$SUM)
boxplot(data$A1, col = "green")
abline(h= 4)
hist(data$A1, col = "green")
rug(data$A1)
ggplot(data=data, aes(x=D, y=data$SUM, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$SUM), size=5)
ggplot(data=data, aes(x=D, y=data$A1, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$A1), size=5)
quantile(data$SUM)
tt <- table(data$SUM)
tk <- table(tt)
tt
tk
class(tt)
str(tt)
dim(tt)
range(tt)
hcl <- hclust(dist(tt))  # clustering
plot(hcl)
median(tt)
quantile(tt, probs = c(0.2, 0.75, 1))
quantile(data$SSM)
st <- table(data$SSM)
sk <- table(st)
st
sk
hcs <- hclust(dist(st))  # clustering
plot(hcs)
# ------------------------------------------------------------------------------
d = ts(data=s[c(2,3)])
plot(d)
qplot(data = data, x = data$SUM)  + scale_x_continuous(limits = c(21, 237)) + geom_histogram(binwidth = 20, color = 'black', fill = '#006400')
mf = meanf(d[,2],h=12,level=c(90,95),fan=FALSE,lambda=NULL)
plot(mf)
mn = naive(d[,2],h=12,level=c(90,95),fan=FALSE,lambda=NULL)
plot(mn)
md = rwf(d[,2],h=12,drift=T,level=c(90,95),fan=FALSE,lambda=NULL)
plot(md)
fit <- ets(d[,2], model = "ANN")
fit
forecast(fit, 1)
plot(forecast(fit, 1))
as.POSIXlt(x = "2014-01-01", origin="2014-01-01")$yday
d.ts = ts(d, freq=106, start=c(2014, 0))
plot(d.ts)
r <- apply(numbers, 1, function(x) sum(x))
r
class(r)
plot(r)
s <- sapply(numbers, sum)
s
library(forecast)
forecast(data$sum, 10)
ls()
rm(list=ls())
#library(tseries)
library(ggplot2)
library(reshape2)
data <- read.csv("~/Data/lua-workspace/luckynumbers/swlt_2015.csv",
colClasses=c("character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"),
sep=" ", comment.char = "#", header = FALSE)
#View(data)
head(data)
#numbers <- data[,c(2,3,4,5,6,7)]
#NN	YYYY-MM-DD	N1	N2	N3	N4	N5	N6	A1	AVG	SUM	PRIME	CHNUM	EVEN	ODD	BGAVG	BG25	PATTERN	DF	B1	B2
data$AVG <- rowMeans(data[,2:7])
data$SUM <- rowSums(data[,2:7])
data$SSM <- apply(data[,2:7], 1, function(x) { x[6] - x[5] +  x[5] - x[4] + x[4] - x[3] + x[3] - x[2] + x[2] - x[1]} )
data$SD <- apply(data[,2:7], 1, sd )
colnames(data) <- c("D", "N1", "N2", "N3", "N4", "N5", "N6", "A1", "AVG", "SUM", "SSM", "SD")
head(data)
data$D <- as.Date(data$D, format="%Y-%m-%d")
s <- data[c("D", "A1", "SUM")]
s <- s[order(s$D),]
str(data)
plot(x = data$D, y = data$SUM, col=data$A1)
# ---------------------------------------------------------------------------------
df <- data[1:10,]
ggplot(df, aes(x = df$D, y = df$SUM)) +
geom_line(aes(y = df$SUM, col = "SUM"), pch = 19, size = 1, col = "steelblue", linetype = "dashed") +
geom_line(aes(y = df$SD, col = "SD"), pch = 19, size = 1, col = "dark green", linetype = "solid") +
geom_point(aes(y = df$SSM, col = "SSM"), pch = 19, size = 4, alpha = 0.75, col = "red", linetype = "dashed") +
geom_point(pch = 19, size = 4, alpha = 0.75, col = "steelblue")
ggplot(data=df, aes(x=D, y=SUM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
ggplot(data=df, aes(x=D, y=SSM)) + geom_bar(stat="identity", fill="steelblue") + theme_minimal() # + coord_flip()
# ---------------------------------------------------------------------------------
#boxplot(data$SUM ~ data$A1, col = "red")
abline(h= 130)
#hist(data$SUM, col = "red", breaks = 50)
model <- lm(data$SUM ~ data$A1, data)
abline(model, lwd = 2)
abline(v = median(data$SUM), col = "blue", lwd = 4)
rug(data$SUM)
boxplot(data$A1, col = "green")
abline(h= 4)
hist(data$A1, col = "green")
rug(data$A1)
ggplot(data=data, aes(x=D, y=data$SUM, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$SUM), size=5)
ggplot(data=data, aes(x=D, y=data$A1, group=1)) + geom_line() + geom_point() + geom_text(aes(label=data$A1), size=5)
quantile(data$SUM)
tt <- table(data$SUM)
tk <- table(tt)
tt
tk
class(tt)
str(tt)
dim(tt)
range(tt)
hcl <- hclust(dist(tt))  # clustering
plot(hcl)
median(tt)
quantile(tt, probs = c(0.2, 0.75, 1))
quantile(data$SSM)
st <- table(data$SSM)
sk <- table(st)
st
sk
hcs <- hclust(dist(st))  # clustering
plot(hcs)
# ------------------------------------------------------------------------------
# install.packages("rjson")
# install.packages("dplyr")
# clean R environment
rm(list=ls())
# load JSON and DPLYR libraries
library(jsonlite)
library(dplyr)
library(Rcpp)
library(inline)
library(data.table)
setwd("/home/david/Data/Sherlock/r-sherlock")
sourceCpp("resolver.cpp")
resolved_ip <- gethostbyname("dds.ec")
source("geoip.R")
#geoobj <- freegeoip('184.26.100.110')
#geoobj$ip
#class(geoobj)
# load JSON file into a data.frame
json_file <- stream_in(file("events-mssi.txt"))   # JSON (RFC 4627), Imported 108491 records. Simplifying into dataframe...
# local({ load("all.RData") ls() })
#class(json_file)
#summary(json_file)
#View(json_file)
# load client data into a data.frame
client_data <- read.csv(file="client_data.txt", header=FALSE, sep=",", stringsAsFactors=FALSE)
colnames(client_data) <- c("MAC", "TIMESTAMP", "PROTOCOL", "IP_SOURCE", "PORT_SOURCE", "host.ip", "PORT_TARGET", "STATUS", "SERVICE")
class(client_data)
#View(client_data)
# load JSON file with HOST.IP field into a data.frame
threat_feed <- stream_in(file("threat_feed.txt"))   # JSON (RFC 4627)
colnames(threat_feed)
class(threat_feed)
summary(threat_feed)
#View(threat_feed)
class(threat_feed["host"])
# flatten JSON structure for join operation
f_data <- flatten(threat_feed)
# do left join on client_data and f_data
t_join <- inner_join(client_data, f_data, by = "host.ip")
class(t_join)
# view report
View(t_join)
library(maps)       # Provides functions that let us plot the maps
library(mapdata)    # Contains the hi-resolution points that mark out the countries.
library(sp)
setwd("/home/david/Data/Sherlock/r-sherlock")
source("geoip.R")
my_coordinates = freegeoip('72.167.232.197')
map('worldHires',c('Switzerland'))
points(my_coordinates$longitude, my_coordinates$latitude, col=2, pch=19)
#map('worldHires')
map('world2Hires')
#threat_data <- read.csv(file="threat_data_15666.csv", header=FALSE, sep=",", stringsAsFactors=FALSE)
#colnames(threat_data) <- c("raw", "classification_type", "malware_name", "feed_name", "feed_url", "feed_accuracy", "source_fqdn", "source_ip", "source_network", "source_url", "source_asn", "source_reverse_dns", "time_observation", "time_source", "event_description_text")
threat_data <- read.csv(file="threat_data_15652_ipinfo.csv", header=FALSE, sep=",", stringsAsFactors=TRUE)
colnames(threat_data) <- c("source_ip", "locale", "country", "code", "state", "city", "zip", "county", "latitude", "longitude", "status")
View(threat_data)
#threat_data <- tail(threat_data, 20)
#threat_data_coordinates <- lapply(threat_data$source_ip, freegeoip)
#threat_data_frame <- data.frame(matrix(unlist(threat_data_coordinates), nrow=20, byrow=T), stringsAsFactors=FALSE)
View(threat_data_frame)
map('worldHires')
points(threat_data$longitude, threat_data$latitude, col=threat_data$country, pch=19)
rm(list=ls())
library(maps)
library(ggplot2)
threat_data <- read.csv(file="threat_data_15652_ipinfo.csv", header=FALSE, sep=",", stringsAsFactors=TRUE)
colnames(threat_data) <- c("source_ip", "locale", "country", "code", "state", "city", "zip", "county", "latitude", "longitude", "status")
library(rworldmap)
library(mapproj)
library(rworldxtra)
newmap <- getMap(resolution = "high")
points(threat_data$longitude, threat_data$latitude, col = "red", cex = .6)
library(rgbif)
install.packages("rgbif")
Dan_chr=occurrencelist(sciname = 'Danaus chrysippus',
coordinatestatus = TRUE,
maxresults = 1000,
latlongdf = TRUE, removeZeros = TRUE)
library(ggmap)
library(ggplot2)
wmap1 = qmap('India',zoom=2)
wmap1 +
geom_jitter(data = Dan_chr,
aes(decimalLongitude, decimalLatitude),
alpha=0.6, size = 4, color = "red") +
opts(title = "Danaus chrysippus")
### GGMAP #######################################################################
rm(list=ls())
library(ggmap)
library(png)
setwd("/home/david/Data/Sherlock/r-sherlock")
threat_data <- read.csv(file="threat_data_15652_ipinfo.csv", header=FALSE, sep=",", stringsAsFactors=FALSE)
colnames(threat_data) <- c("source_ip", "locale", "country", "code", "state", "city", "zip", "county", "latitude", "longitude", "status")
#View(threat_data)
#stat <- as.data.frame(table(threat_data$country))
#write.table(stat, file = "country_stat.csv", row.names=FALSE, na="", col.names=FALSE, sep=",")
map <- get_map(location = 'North America', zoom = 4)
map <- get_map(location = 'South America', zoom = 4)
map <- get_map(location = 'North America', zoom = 4)
ggmap(map)
TC <- ggmap(map) + geom_point(data=threat_data, alpha = .4, size = 8, aes(x = longitude, y = latitude), color='red') # + ggtitle("Threat")
TC
map <- get_map(location = 'China', zoom = 4)
map <- get_map(location = 'United States', zoom = 4)
ggmap(map)
TC <- ggmap(map) + geom_point(data=threat_data, alpha = .4, size = 8, aes(x = longitude, y = latitude), color='red') # + ggtitle("Threat")
TC
